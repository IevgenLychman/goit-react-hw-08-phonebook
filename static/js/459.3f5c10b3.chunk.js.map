{"version":3,"file":"static/js/459.3f5c10b3.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","Pages/ContactsPage/ContactsPage.styled.js","components/ButtonAdd/ButtonAdd.styled.js","components/ButtonAdd/ButtonAdd.js","components/Modal/Modal.styled.js","components/ContactForm/ContactForm.js","components/Modal/Modal.js","components/Header/Header.styled.js","components/Header/Header.js","components/Footer/Footer.styled.js","components/Footer/Footer.js","Pages/ContactsPage/ContactsPage.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-size: 30px;\n  font-weight: bold;\n  color: #121212;\n  padding-top: 40px;\n`;\n","import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\n\nimport { Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const saveFilterValue = evt => {\n    dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <Label>\n      <Typography component=\"h2\" variant=\"h5\">\n        Find contact by name\n      </Typography>\n      <Box component=\"form\" noValidate onChange={saveFilterValue}>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          autoFocus\n        />\n      </Box>\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BsXLg } from 'react-icons/bs';\nimport { NavLink } from 'react-router-dom';\n\nexport const Button = styled.button`\n  width: 50px;\n  height: 50px;\n  padding: 10px;\n  margin-left: auto;\n  color: #0a0d68;\n  font-size: 16px;\n  font-weight: bold;\n  background-color: transparent;\n  border-radius: 50%;\n  border: none;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const DelIcon = styled(BsXLg)`\n  width: 100%;\n  height: 100%;\n  fill: #1976d2;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 40px;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: #121212;\n  font-size: 28px;\n  text-decoration: none;\n`;\nexport const Div = styled.div`\n  display: flex;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  Button,\n  DelIcon,\n  Item,\n  List,\n  NavLinkStyled,\n  Div,\n} from 'components/ContactList/ContactList.styled';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(getFilteredContacts);\n\n  function delContact(id) {\n    dispatch(deleteContact(id));\n  }\n\n  return (\n    <Div>\n      <List>\n        {contacts.map(contact => (\n          <Item key={contact.id}>\n            <NavLinkStyled to={`${contact.id}`}>{contact.name} </NavLinkStyled>\n            <Button type=\"button\" onClick={() => delContact(contact.id)}>\n              <DelIcon />\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </Div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  min-height: 800px;\n  align-items: flex-start;\n  justify-content: flex-start;\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.87);\n  -webkit-transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  border: none;\n  border-radius: 4px;\n  margin-bottom: 30px;\n`;\n\nexport const Aside = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  padding: 40px;\n`;\n\nexport const ButtonAdd = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  width: 100%;\n  height: 50px;\n  border: none;\n  background-color: #0824af;\n  border-radius: 4px;\n  padding: 35px;\n  color: #81cbee;\n  font-family: sans-serif;\n  font-size: 30px;\n  font-weight: bold;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\n\nexport const AddIcon = styled(BsFillPersonPlusFill)`\n  margin-right: 20px;\n  width: 50px;\n  height: 50px;\n  fill: #81cbee;\n`;\n","import styled from '@emotion/styled';\nimport { BsFillPersonPlusFill } from 'react-icons/bs';\n\nexport const ButtonAddStyled = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #1976d2;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  border: none;\n  padding: 6px 16px;\n  border-radius: 4px;\n  min-width: 150px;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n`;\n\nexport const AddIcon = styled(BsFillPersonPlusFill)`\n  margin-right: 20px;\n  width: 20px;\n  height: 20px;\n  fill: #fff;\n`;\n","import { AddIcon, ButtonAddStyled } from \"./ButtonAdd.styled\";\n\nexport const ButtonAdd = ({ openModal }) => {\n    return (\n        <ButtonAddStyled onClick={() => openModal(true)}><AddIcon />Add new contact</ButtonAddStyled>\n    )\n}","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalStyled = styled.div`\n  height: 350px;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.87);\n  -webkit-transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  border: none;\n  border-radius: 4px;\n`;\n\nexport const Header = styled.h2`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 30px;\n`;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nexport const ContactForm = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const data = new FormData(e.currentTarget);\n    const newName = { name: data.get('name'), number: data.get('number') };\n    const Name = newName.name.toLowerCase();\n\n    const nameExist = contacts\n      .map(contact => contact.name.toLowerCase())\n      .some(el => el === Name);\n\n    if (nameExist) {\n      toast.error('A contact with that name already exists.');\n    } else {\n      dispatch(addContact(newName));\n    }\n\n    e.currentTarget.reset();\n    closeModal();\n  };\n\n  return (\n    <Grid>\n      <Box padding=\"0 60px\" component=\"form\" noValidate onSubmit={handleSubmit}>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Name\"\n          name=\"name\"\n          autoFocus\n        />\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"number\"\n          label=\"Number\"\n          type=\"tel\"\n          id=\"number\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Add contact\n        </Button>\n      </Box>\n    </Grid>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Header, ModalStyled, Overlay } from './Modal.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ closeModal }) => {\n  const closeByKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal(false);\n    }\n  };\n\n  const closeByClickOnBackdrop = e => {\n    if (e.target === e.currentTarget) {\n      closeModal(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', closeByKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', closeByKeyDown);\n    };\n  });\n\n  return createPortal(\n    <Overlay onClick={closeByClickOnBackdrop}>\n      <ModalStyled>\n        <Header>Fill the details of the new contact</Header>\n        <ContactForm closeModal={closeModal} />\n      </ModalStyled>\n    </Overlay>,\n    modalRoot\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n  color: rgba(0, 0, 0, 0.87);\n  -webkit-transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  border: none;\n  padding: 6px 16px;\n  border-radius: 4px;\n  margin-bottom: 30px;\n`;\n\nexport const HeaderTitle = styled.h2`\n  margin: 0;\n  font-weight: 300;\n  font-size: 3.75rem;\n  line-height: 1.2;\n`;\nexport const User = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const UserName = styled.p`\n  margin: 0;\n  margin-right: 10px;\n  font-weight: 500;\n  font-size: 1.25rem;\n  line-height: 1.6;\n  letter-spacing: 0.0075em;\n`;\n\nexport const Button = styled.button`\n  justify-content: center;\n  color: #fff;\n  background-color: #1976d2;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  border: none;\n  padding: 6px 16px;\n  border-radius: 4px;\n  min-width: 150px;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n  text-transform: uppercase;\n`;\n","import {\n  HeaderStyled,\n  HeaderTitle,\n  Button,\n  User,\n  UserName,\n} from './Header.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logOut } from 'redux/auth/operations';\nimport { getUser } from 'redux/auth/selectors';\n\nexport const Header = () => {\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  return (\n    <HeaderStyled>\n      <HeaderTitle>Phonebook</HeaderTitle>\n      <User>\n        <UserName>{user.name}</UserName>\n        <Button onClick={() => dispatch(logOut())}>Log out</Button>\n      </User>\n    </HeaderStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FooterStyled = styled.footer`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 200px;\n  background-image: url('https://source.unsplash.com/random');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n","import { FooterStyled } from './Footer.styled';\n\nexport function Footer() {\n  return <FooterStyled></FooterStyled>;\n}\n","import { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Aside, ContactsContainer } from './ContactsPage.styled';\nimport { ButtonAdd } from 'components/ButtonAdd/ButtonAdd';\nimport { Modal } from 'components/Modal/Modal';\nimport { Outlet } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Header } from 'components/Header/Header';\nimport { Footer } from 'components/Footer/Footer';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\n\nconst ContactsPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <Grid component=\"main\">\n      <CssBaseline />\n      <Header />\n      <ContactsContainer>\n        <Aside>\n          <ButtonAdd openModal={setIsModalOpen} />\n          <Filter />\n        </Aside>\n        <ContactList />\n        <Outlet />\n        {isModalOpen && <Modal closeModal={setIsModalOpen} />}\n      </ContactsContainer>\n      <Footer />\n    </Grid>\n  );\n};\n\nexport default ContactsPage;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filterValue;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilteredContacts = createSelector(\n    [getContacts, getFilter], (contacts, filter) => {\n\n    if (!filter) {\n      return contacts\n    }\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter));\n  \n});\n\nexport const getModalState = state => state.contacts.isModalOpen;\n\n\n"],"names":["Label","styled","Filter","dispatch","useDispatch","Typography","component","variant","Box","noValidate","onChange","evt","setFilter","target","value","TextField","margin","required","fullWidth","id","label","name","autoFocus","Button","DelIcon","BsXLg","Item","List","NavLinkStyled","NavLink","Div","ContactList","useEffect","fetchContacts","contacts","useSelector","getFilteredContacts","map","contact","to","type","onClick","deleteContact","ContactsContainer","Aside","ButtonAddStyled","BsFillPersonPlusFill","AddIcon","ButtonAdd","openModal","Overlay","ModalStyled","Header","ContactForm","closeModal","getContacts","Grid","padding","onSubmit","e","preventDefault","data","FormData","currentTarget","newName","get","number","Name","toLowerCase","some","el","toast","addContact","reset","sx","mt","mb","modalRoot","document","querySelector","Modal","closeByKeyDown","code","window","addEventListener","removeEventListener","createPortal","HeaderStyled","HeaderTitle","User","UserName","user","getUser","logOut","FooterStyled","Footer","useState","isModalOpen","setIsModalOpen","CssBaseline","state","items","createSelector","filterValue","filter","includes"],"sourceRoot":""}